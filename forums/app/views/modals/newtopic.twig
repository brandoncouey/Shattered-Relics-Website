<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

<div class="modal fade" id="topicModal" tabindex="-1" role="dialog" aria-labelledby="topicModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content animate-bottom">
            
            <div class="alert-box">
                <div class="alert mb-0" id="notice">
                    &nbsp;
                </div>
            </div>

            <div class="modal-body" style="min-height:300px;">
                <form action="{{ url(friendlyTitle(curcat['id']~'-'~curcat['title'])) }}" method="post" id="postform">

                    <div class="d-flex">
                        <div class="flex-fill pr-3">
                            <img src="{{ user.getAvatarUrl() }}" class="user_avatar large m-auto">
                        </div>
                        <div class="flex-fill w-100">
                            <div class="form-group mb-1">
                                <input type="text" 
                                    class="form-control form-control-lg border-0" 
                                    name="title" placeholder="Topic Title" id="title" maxlength="120">
                            </div>
                            <div class="form-group">
                                <div id="editor" class="mb-3"></div>
                                <textarea name='info' id='editor-form' style='display:none'></textarea>
                            </div>
                        </div>
                    </div>

                    <button type="submit" class="btn btn-dark shadow-none" id="submit">
                        Post Discussion
                    </button>

                    <div id="toolbar" class="d-inline-block">
                        <span class="ql-formats">
                            <button class="ql-bold" 
                                data-toggle="tooltip" data-title="Bold"></button>
                            <button class="ql-italic" 
                                data-toggle="tooltip" data-title="Italic"></button>
                            <button class="ql-underline" 
                                data-toggle="tooltip" data-title="Underline"></button>
                            <button class="ql-strike" 
                                data-toggle="tooltip" data-title="Strikethrough"></button>
                        </span>
                       
                        <span class="ql-formats">
                            <button class="ql-list" value="ordered" 
                                data-toggle="tooltip" data-title="Ordered List"></button>
                            <button class="ql-list" value="bullet" 
                                data-toggle="tooltip" data-title="Bullet List"></button>
                        </span>

                        <span class="ql-formats">
                            <button class="ql-link" 
                                data-toggle="tooltip" data-title="Link"></button>
                            <button class="ql-image" 
                                data-toggle="tooltip" data-title="Image"></button>
                        </span>

                        <span class="ql-formats">
                            <button class="ql-clean"  data-toggle="tooltip" data-title="Clear Formatting"></button>
                        </span>
                    </div>
                    
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    var apiUrl = 'https://api.imgur.com/3/image';
    var apiKey = '{{ constant("imgur_key") }}';

    var quill = new Quill('#editor', {
        theme: 'snow',
        modules: {
            toolbar: '#toolbar'
        },
        placeholder: 'Write a post...'
    });

    let alert = $('.alert-box');

    quill.getModule("toolbar").addHandler("image", function (a) {
        var input = document.createElement('input');
        
        input.setAttribute('type', 'file');
        input.click();

        input.onchange = (s) => {
            var file = input.files[0];

            if (/^image\//.test(file.type)) {
                var settings = {
                    async: true,
                    crossDomain: true,
                    processData: false,
                    contentType: false,
                    type: 'POST',
                    url: apiUrl,
                    headers: {
                        Authorization: 'Client-ID ' + apiKey,
                        Accept: 'application/json'
                    },
                    mimeType: 'multipart/form-data'
                };

                var formData = new FormData();
                formData.append("image", file);
                settings.data = formData;

                quill.enable(false);   // Disables user input

                var range = quill.getSelection();

                if (range) {
                    $.ajax(settings).done(function(response) {
                        var json = JSON.parse(response);
                        var index = range.index;

                        quill.insertEmbed(index, 'image', json.data.link);
                        quill.enable();
                    });
                } else {
                    alert("Please select a spot in your post where you wish the image to be placed.")
                }

            } else {
                console.warn('You could only upload images.');
            }
        }
    });

    $("#postform").on("submit", function (event) {
        event.preventDefault();
        let form   = $(this);
        let button = form.find("#submit"); 
        let orig_txt = button.text();

        disableButton(button);

        let post_body =  form.find(".ql-editor").html();

        $.post("{{ url('topic/new') }}", {
            category: "{{ curcat['id'] }}",
            body: form.find(".ql-editor").html(),
            title: form.find("#title").val()
        }, function(data) {
            console.log(data);
            
            alert.find("#notice")
                .removeClass("alert-danger alert-success")
                .html(data.message)
                .addClass(data.success ? "alert-success" : "alert-danger");

            if (!data.success) {
                resetButton(button, orig_txt);
            }
            
            alert.stop(true, true).slideDown(300).delay(data.success ? 1500 : 3000).slideUp(300, function() {
                
                if (data.success) {
                    window.location.reload();
                }
            });

            console.log(data);
        })
    });

    function disableButton(button) {
        button
            .addClass("disabled")
            .attr("disabled", "disabled")
            .html("<i class=\"fad fa-spinner fa-pulse\"></i>");
    }

    function resetButton(button, orig_txt) {
        button
            .removeClass("disabled")
            .removeAttr("disabled")
            .html(orig_txt);
    }
</script>